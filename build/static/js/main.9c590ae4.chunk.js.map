{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/cart-slice.js","store/ui-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","itemId","id","quantity","totalPrice","price","push","title","removeItemToCart","exisitingItem","filter","cartActions","actions","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","console","log","sendRequest","method","body","JSON","stringify","sendCartData","staus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c590ae4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__19V8n\",\"details\":\"CartItem_details__2Ou01\",\"quantity\":\"CartItem_quantity__1vz0a\",\"price\":\"CartItem_price__2-Ky5\",\"itemprice\":\"CartItem_itemprice__379Qv\",\"actions\":\"CartItem_actions__3EE96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2LdSV\",\"price\":\"ProductItem_price__MVTJB\",\"actions\":\"ProductItem_actions__1jek9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__oig2s\",\"error\":\"Notification_error__1F54d\",\"success\":\"Notification_success__2yxU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__usVLM\",\"badge\":\"CartButton_badge__1QGZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__UxRhL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2qsB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__6xR6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__3vjTF\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(\r\n        (item) => item.itemId === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemToCart(state, action) {\r\n      const id = action.payload;\r\n      const exisitingItem = state.items.find((item) => item.itemId === id);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (exisitingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.itemId !== id);\r\n      } else {\r\n        exisitingItem.quantity--;\r\n        exisitingItem.totalPrice =\r\n          exisitingItem.totalPrice - exisitingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"./cart-slice\";\r\nimport uiSlice from \"./ui-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const {\n    itemId: id,\n    name: title,\n    quantity,\n    totalPrice: total,\n    price,\n  } = props.item;\n\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, title, price }));\n  };\n\n  const removeFromCartHandler = () => {\n    dispatch(cartActions.removeItemToCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeFromCartHandler}>-</button>\n          <button onClick={addToCartHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => {\n          return <CartItem key={item.id} item={item} />;\n        })}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport classes from \"./CartButton.module.css\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { id, title, price, description } = props;\n\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, title, price }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"The first book I ever wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 5,\n    title: \"My Second Book\",\n    description: \"The second book I ever wrote\",\n  },\n  {\n    id: \"p3\",\n    price: 4,\n    title: \"My Third Book\",\n    description: \"The Third book I ever wrote\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => {\n          return (\n            <ProductItem\n              id={product.id}\n              key={product.id}\n              title={product.title}\n              price={product.price}\n              description={product.description}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = \"\";\r\n\r\n  if (props.status === \"error\") {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === \"success\") {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\n// import { uiActions } from \"./store/ui-slice\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          staus={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n// one way of using side effects\n\n// useEffect(() => {\n//   const sendCartData = async () => {\n//     dispatch(\n//       uiActions.showNotification({\n//         status: \"pending\",\n//         title: \"Sending....\",\n//         message: \"Sending cart data!\",\n//       })\n//     );\n//     const response = await fetch(\n//       \"https://redux-cart-19690-default-rtdb.firebaseio.com/cart.json\",\n//       {\n//         method: \"PUT\",\n//         body: JSON.stringify(cart),\n//       }\n//     );\n//     if (!response.ok) {\n//       throw new Error(\"Sending cart data is failed.\");\n//     }\n//     dispatch(\n//       uiActions.showNotification({\n//         status: \"success\",\n//         title: \"Success\",\n//         message: \"Sent cart data successfully!\",\n//       })\n//     );\n//   };\n//   if (isInitial) {\n//     isInitial = false;\n//     return;\n//   }\n//   sendCartData().catch((error) => {\n//     dispatch(\n//       uiActions.showNotification({\n//         status: \"error\",\n//         title: \"Error\",\n//         message: \"Sending cart data failed!\",\n//       })\n//     );\n//   });\n// }, [cart, dispatch]);\n","import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-cart-19690-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch cart data!\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const cartData = await fetchData();\r\n      console.log(cartData);\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"fetching cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending....\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-cart-19690-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data is failed.\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"Sent cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/index\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}